-- Drop tables in reverse order of dependency if they exist
DROP TABLE IF EXISTS public.inventory;
DROP TABLE IF EXISTS public.account;
DROP TABLE IF EXISTS public.classification;

-- Drop custom type if it exists
DROP TYPE IF EXISTS public.account_type;

-- Task Two: Create PostgreSQL type
CREATE TYPE public.account_type AS ENUM ('Client', 'Admin');

-- Task Two: Create classification table
CREATE TABLE public.classification (
    classification_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    classification_name VARCHAR(255) NOT NULL
);

-- Task Two: Create account table
CREATE TABLE public.account (
    account_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    account_firstname VARCHAR(50) NOT NULL,
    account_lastname VARCHAR(50) NOT NULL,
    account_email VARCHAR(100) NOT NULL UNIQUE,
    account_password VARCHAR(255) NOT NULL,
    account_type public.account_type NOT NULL DEFAULT 'Client'
);

-- Task Two: Create inventory table
CREATE TABLE public.inventory (
    inv_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    inv_make VARCHAR(50) NOT NULL,
    inv_model VARCHAR(50) NOT NULL,
    inv_year CHAR(4) NOT NULL,
    inv_description TEXT,
    inv_image VARCHAR(255) NOT NULL,
    inv_thumbnail VARCHAR(255) NOT NULL,
    inv_price DECIMAL(10, 2) NOT NULL,
    inv_miles INT NOT NULL,
    inv_color VARCHAR(30),
    classification_id INT NOT NULL,
    CONSTRAINT fk_classification FOREIGN KEY (classification_id) REFERENCES public.classification(classification_id)
);

-- Task Two: Populate classification table (Sample Data)
INSERT INTO public.classification (classification_name) VALUES
('Custom'),
('Sport'),
('SUV'),
('Truck'),
('Sedan');

-- Task Two: Populate inventory table (Sample Data - you'll have more from your activities)
-- Make sure image paths initially do NOT include '/vehicles/' for query 6 to work as intended.
INSERT INTO public.inventory (
    inv_make, inv_model, inv_year, inv_description, inv_image, inv_thumbnail, inv_price, inv_miles, inv_color, classification_id
) VALUES
('Chevy', 'Camaro', '2018', 'A cool sports car.', '/images/camaro.jpg', '/images/camaro-tn.jpg', 30000.00, 10000, 'Red', (SELECT classification_id FROM classification WHERE classification_name = 'Sport')),
('Ford', 'F-150', '2020', 'A rugged truck.', '/images/f150.jpg', '/images/f150-tn.jpg', 45000.00, 5000, 'Black', (SELECT classification_id FROM classification WHERE classification_name = 'Truck')),
('GM', 'Hummer', '2006', 'This comes with small interiors and is a gas guzzler.', '/images/hummer.jpg', '/images/hummer-tn.jpg', 18000.00, 120000, 'Yellow', (SELECT classification_id FROM classification WHERE classification_name = 'SUV')),
('Jeep', 'Grand Cherokee', '2022', 'An adventurous SUV with many features.', '/images/grand-cherokee.jpg', '/images/grand-cherokee-tn.jpg', 55000.00, 200, 'Blue', (SELECT classification_id FROM public.classification WHERE classification_name = 'SUV')),
('Dodge', 'Charger', '2021', 'A powerful American muscle car.', '/images/charger.jpg', '/images/charger-tn.jpg', 35000.00, 8000, 'Gray', (SELECT classification_id FROM public.classification WHERE classification_name = 'Sport'));


-- Copied Query 4 from Task One
UPDATE inventory
SET inv_description = REPLACE(inv_description, 'small interiors', 'a huge interior')
WHERE inv_make = 'GM' AND inv_model = 'Hummer';

-- Copied Query 6 from Task One
UPDATE inventory
SET inv_image = REPLACE(inv_image, '/images/', '/images/vehicles/'),
    inv_thumbnail = REPLACE(inv_thumbnail, '/images/', '/images/vehicles/');